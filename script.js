// TOTOBODY ‚Äî —É–∑–≥–æ–¥–∂–µ–Ω–∏–π —Å–∫—Ä–∏–ø—Ç –ø—ñ–¥ –æ—Å—Ç–∞–Ω–Ω—ñ–π HTML
document.addEventListener('DOMContentLoaded', () => {
  // ===== –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –º—ñ–∂ –µ–∫—Ä–∞–Ω–∞–º–∏ =====
  const screens = document.querySelectorAll('.screen');
  function showScreen(id) {
    screens.forEach(s => s.classList.remove('active'));
    const el = document.getElementById(id);
    if (el) el.classList.add('active');
  }
  // –∑—Ä–æ–±–∏–º–æ –¥–æ—Å—Ç—É–ø–Ω–∏–º –¥–ª—è –∫–Ω–æ–ø–æ–∫ —ñ–∑ HTML (onclick="showScreen('...')")
  window.showScreen = showScreen;

  // ===== DOM –µ–ª–µ–º–µ–Ω—Ç–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è =====
  const startHIITBtn = document.getElementById('startHIITBtn');
  const startMIXBtn  = document.getElementById('startMIXBtn');

  const exerciseNameEl = document.getElementById('exerciseName'); // –∑–∞–≥–æ–ª–æ–≤–æ–∫ (–±—ñ–≥—É—á–∞ —Å—Ç—Ä–æ–∫–∞ / –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç)
  const timerEl         = document.getElementById('timer');
  const prevBtn         = document.getElementById('prevExercise');
  const pauseBtn        = document.getElementById('pauseBtn');
  const stopBtn         = document.getElementById('stopBtn');
  const nextBtn         = document.getElementById('nextExercise');
  const completedListEl = document.getElementById('completedExercises');

  const caloriesInput   = document.getElementById('caloriesInput');
  const saveCaloriesBtn = document.getElementById('saveCaloriesBtn');

  // ===== –ü—É–ª–∏ –≤–ø—Ä–∞–≤ =====
  const poolCommon = [
    '–ü—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è','–í—ñ–¥–∂–∏–º–∞–Ω–Ω—è','–ü–ª–∞–Ω–∫–∞','–ë–µ—Ä–ø—ñ','–°—Ç—Ä–∏–±–∫–∏ –Ω–∞ –º—ñ—Å—Ü—ñ','–í–∏–ø–∞–¥–∏',
    '–°–∫—Ä—É—á—É–≤–∞–Ω–Ω—è','–ú–∞—Ö–∏ –≥–∞–Ω—Ç–µ–ª—è–º–∏','–ü—ñ–¥–π–æ–º–∏ –Ω—ñ–≥','–ë—ñ–≥ –Ω–∞ –º—ñ—Å—Ü—ñ','–ì—ñ—Ä–∫–∞ (mountain climbers)',
    '–ü–ª–∞–Ω–∫–∞ –∑ –æ–±–µ—Ä—Ç–∞–Ω–Ω—è–º','–ü—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è –∑ –≥–∞–Ω—Ç–µ–ª—è–º–∏','–°—Ç—ñ–ª—å—á–∏–∫ –±—ñ–ª—è —Å—Ç—ñ–Ω–∏',
    '–°—Ç—Ä–∏–±–∫–∏ —á–µ—Ä–µ–∑ —Å–∫–∞–∫–∞–ª–∫—É','–î–∂–∞–º–ø-—Å–∫–≤–æ—Ç','–í—ñ–¥–∂–∏–º–∞–Ω–Ω—è –∑ –∫–æ–ª—ñ–Ω','–°—É–ø–µ—Ä–º–µ–Ω',
    '–†–æ—Å—ñ–π—Å—å–∫—ñ —Å–∫—Ä—É—á—É–≤–∞–Ω–Ω—è','–ê–ª—å–ø—ñ–Ω—ñ—Å—Ç –∑ –ø–∞—É–∑–æ—é','–ë—ñ—á–Ω–∞ –ø–ª–∞–Ω–∫–∞','–ì—ñ–ø–µ—Ä–µ–∫—Å—Ç–µ–Ω–∑—ñ—è (–ª–µ–∂–∞—á–∏)',
    '–Ø–≥–æ–¥–∏—á–Ω–∏–π –º—ñ—Å—Ç','–•—ñ–ø-—Ç—Ä–∞—Å—Ç','–í—ñ–¥–∂–∏–º–∞–Ω–Ω—è –≤—É–∑—å–∫–∏–º —Ö–≤–∞—Ç–æ–º'
  ];
  const poolHIIT = [
    '–ë–µ—Ä–ø—ñ', '–î–∂–∞–º–ø-—Å–∫–≤–æ—Ç', '–°–ø—Ä–∏–Ω—Ç –Ω–∞ –º—ñ—Å—Ü—ñ', '–ê–ª—å–ø—ñ–Ω—ñ—Å—Ç', '–ü–ª–∞–Ω–∫–∞',
    '–°—Ç—Ä–∏–±–∫–∏ –¥–∂–µ–∫', '–í–∏–ø–∞–¥–∏ —Å—Ç—Ä–∏–±–∫–æ–º', '–ü–ª–∞–Ω–∫–∞ + –∫–æ–ª—ñ–Ω–æ-–ª—ñ–∫–æ—Ç—å', '–°–∫–µ–ª–µ–ª–∞–∑ –∑ –ø–∞—É–∑–æ—é',
    '–•–∞–π-–Ω—ñ—Å (–≤–∏—Å–æ–∫—ñ –∫–æ–ª—ñ–Ω–∞)', '–ë–æ–∫–æ–≤—ñ —Å—Ç—Ä–∏–±–∫–∏', '–°–∫–µ–π—Ç-—Å—Ç–µ–ø', '–í–µ–ª–æ—Å–∏–ø–µ–¥', '–ë—ñ—á–Ω–∞ –ø–ª–∞–Ω–∫–∞', '–ü–ª–∞–Ω–∫–∞ + –¥–æ—Ç–∏–∫ –ø–ª–µ—á–∞'
  ];
  const poolMIX = [
    '–ü—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è –∑ –≥–∞–Ω—Ç–µ–ª—è–º–∏','–¢—è–≥–∞ –≥–∞–Ω—Ç–µ–ª–µ–π —É –Ω–∞—Ö–∏–ª—ñ','–ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π –ª–µ–∂–∞—á–∏',
    '–ú–∞—Ö–∏ –≥–∞–Ω—Ç–µ–ª—è–º–∏ –≤ —Å—Ç–æ—Ä–æ–Ω–∏','–Ø–≥–æ–¥–∏—á–Ω–∏–π –º—ñ—Å—Ç','–°—Ç–∞–Ω–æ–≤–∞ –∑ –≥–∞–Ω—Ç–µ–ª—è–º–∏',
    '–ê—Ä—Ç–µ–º—ñ—Å (–∫–æ—Ä–ø—É—Å + –Ω–æ–≥–∏)','–ë–æ–∫–æ–≤—ñ –≤–∏–ø–∞–¥–∏','–ó–≤–µ–¥–µ–Ω–Ω—è –Ω–∞ –≥—Ä—É–¥–∏',
    '–ü—É–ª–æ–≤–µ—Ä –∑ –≥–∞–Ω—Ç–µ–ª–ª—é','–ú–æ–ª–æ—Ç–∫–æ–≤—ñ –∑–≥–∏–Ω–∞–Ω–Ω—è','–†–æ–∑–≥–∏–Ω–∞–Ω–Ω—è —Ç—Ä–∏—Ü–µ–ø—Å—É',
    '–ü–ª–∞–Ω–∫–∞','–í–µ–ª–æ—Å–∏–ø–µ–¥','–°–∫—Ä—É—á—É–≤–∞–Ω–Ω—è'
  ];

  function shuffle(arr) {
    return [...arr].sort(() => Math.random() - 0.5);
  }
  function buildWorkout(program) {
    const base = program === 'HIIT BASIC' ? poolHIIT
               : program === 'MIX BASIC'  ? poolMIX
               : poolCommon;
    const names = shuffle(base.concat(poolCommon)).slice(0, 15);
    // —É—Å—ñ –≤–ø—Ä–∞–≤–∏ –ø–æ–∫–∏ –ø–æ 30 —Å–µ–∫ (–ø–æ—Ç—ñ–º –ª–µ–≥–∫–æ –∑—Ä–æ–±–∏–º–æ —Ä—ñ–∑–Ω—ñ)
    return names.map(n => ({ name: n, duration: 30 }));
  }

  // ===== –°—Ç–∞–Ω —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è =====
  let currentProgram = '';
  let exercises = [];
  let idx = 0;
  let remaining = 0;
  let tmr = null;
  let paused = true;
  let started = false;
  const EX_DURATION_DEFAULT = 30;

  function fmt(sec) {
    const m = String(Math.floor(sec / 60)).padStart(2, '0');
    const s = String(sec % 60).padStart(2, '0');
    return `${m}:${s}`;
  }

  function renderHeader() {
    exerciseNameEl.textContent = exercises[idx]?.name ?? '‚Äî';
    timerEl.textContent = fmt(remaining);
  }

  function pushCompletedName(name) {
    const row = document.createElement('div');
    row.className = 'done-row';
    row.textContent = `${name} ‚úÖ`;
    completedListEl.appendChild(row);
  }

  function popCompletedName() {
    if (completedListEl.lastChild) completedListEl.removeChild(completedListEl.lastChild);
  }

  function tick() {
    if (paused) return;
    if (remaining > 0) {
      remaining -= 1;
      timerEl.textContent = fmt(remaining);
      return;
    }
    // –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø–æ—Ç–æ—á–Ω—É
    pushCompletedName(exercises[idx].name);
    if (idx < exercises.length - 1) {
      idx += 1;
      remaining = exercises[idx].duration ?? EX_DURATION_DEFAULT;
      renderHeader();
    } else {
      finishWorkout(); // –≤—Å–µ, –∫—ñ–Ω–µ—Ü—å
    }
  }

  function startInterval() {
    clearInterval(tmr);
    tmr = setInterval(tick, 1000);
  }

  function goTraining(program) {
    currentProgram = program;
    exercises = buildWorkout(program);
    idx = 0;
    remaining = exercises[0]?.duration ?? EX_DURATION_DEFAULT;
    started = false;
    paused = true;
    completedListEl.innerHTML = '';
    renderHeader();
    showScreen('trainingScreen');

    // –ü–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É –°—Ç–∞—Ä—Ç (–¥–∏–Ω–∞–º—ñ—á–Ω–æ), —è–∫—â–æ —ó—ó —â–µ –Ω–µ–º–∞—î
    let startBtn = document.getElementById('dynamicStartBtn');
    if (!startBtn) {
      startBtn = document.createElement('button');
      startBtn.id = 'dynamicStartBtn';
      startBtn.textContent = '–°—Ç–∞—Ä—Ç';
      // –≤—Å—Ç–∞–≤–∏–º–æ –ø–µ—Ä–µ–¥ –±–ª–æ–∫–æ–º controls
      const controls = document.querySelector('#trainingScreen .controls');
      controls.parentNode.insertBefore(startBtn, controls);
      startBtn.addEventListener('click', () => {
        started = true;
        paused = false;
        startInterval();
        startBtn.remove(); // —Å—Ö–æ–≤–∞—Ç–∏ —Å—Ç–∞—Ä—Ç
        pauseBtn.textContent = '‚è∏Ô∏è';
      });
    }
  }

  function finishWorkout() {
    clearInterval(tmr);
    paused = true;
    started = false;
    // –ü–µ—Ä–µ–π–¥–µ–º–æ –Ω–∞ –µ–∫—Ä–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
    showScreen('finishScreen');
    // –æ—á–∏—Å—Ç–∏–º–æ —ñ–Ω–ø—É—Ç
    if (caloriesInput) caloriesInput.value = '';
  }

  // ===== –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ø—ñ–¥ —á–∞—Å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è =====
  if (pauseBtn) {
    pauseBtn.addEventListener('click', () => {
      if (!started) return; // –ø–æ–∫–∏ –Ω–µ —Å—Ç–∞—Ä—Ç–∞–Ω—É–ª–∏ ‚Äî –Ω—ñ—á–æ–≥–æ
      paused = !paused;
      pauseBtn.textContent = paused ? '‚ñ∂Ô∏è' : '‚è∏Ô∏è';
      if (!paused) startInterval();
    });
  }

  if (stopBtn) {
    stopBtn.addEventListener('click', () => {
      if (!started) { showScreen('workoutsScreen'); return; }
      finishWorkout();
    });
  }

  if (nextBtn) {
    nextBtn.addEventListener('click', () => {
      if (!exercises.length) return;
      // –≤—ñ–¥–º—ñ—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É —è–∫ –≤–∏–∫–æ–Ω–∞–Ω—É (—è–∫—â–æ —â–µ –Ω–µ –≤ –∫—ñ–Ω—Ü—ñ)
      pushCompletedName(exercises[idx].name);
      if (idx < exercises.length - 1) {
        idx += 1;
        remaining = exercises[idx].duration ?? EX_DURATION_DEFAULT;
        renderHeader();
      } else {
        finishWorkout();
      }
    });
  }

  if (prevBtn) {
    prevBtn.addEventListener('click', () => {
      if (idx > 0) {
        idx -= 1;
        popCompletedName(); // –ø—Ä–∏–±—Ä–∞—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—é ¬´–≤–∏–∫–æ–Ω–∞–Ω—É¬ª
        remaining = exercises[idx].duration ?? EX_DURATION_DEFAULT;
        renderHeader();
      }
    });
  }

  // ===== –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–∞–ª–æ—Ä—ñ–π (–º—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞ + localStorage) =====
  if (saveCaloriesBtn) {
    saveCaloriesBtn.addEventListener('click', () => {
      const kcal = Number(caloriesInput?.value || 0);
      const dayKey = new Date().toISOString().slice(0,10); // YYYY-MM-DD
      const rec = JSON.parse(localStorage.getItem('tb_stats') || '{}');
      if (!rec[dayKey]) rec[dayKey] = { calories: 0, sessions: [] };
      rec[dayKey].calories += kcal;
      rec[dayKey].sessions.push({ program: currentProgram, done: true, count: exercises.length });
      localStorage.setItem('tb_stats', JSON.stringify(rec));
      alert(`–ó–±–µ—Ä–µ–∂–µ–Ω–æ: ${kcal} –∫–∫–∞–ª. –ö—Ä–∞—Å—É–Ω—á–∏–∫ üí™`);
      showScreen('homeScreen');
    });
  }

  // ===== –ö–Ω–æ–ø–∫–∏ –∑–∞–ø—É—Å–∫—É —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –∑—ñ —Å–ø–∏—Å–∫—É =====
  if (startHIITBtn) startHIITBtn.addEventListener('click', () => goTraining('HIIT BASIC'));
  if (startMIXBtn)  startMIXBtn.addEventListener('click', () => goTraining('MIX BASIC'));

  // –°—Ç–∞—Ä—Ç–æ–≤–∏–π –µ–∫—Ä–∞–Ω
  showScreen('homeScreen');
});