document.addEventListener('DOMContentLoaded', () => {
  document.body.addEventListener('touchstart', () => {}, {passive: true});

  // --- DOM-–µ–ª–µ–º–µ–Ω—Ç–∏ ---
  // ... (–≤—Å—ñ —Ç–≤–æ—ó —Å—Ç–∞—Ä—ñ const –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è —Ç—É—Ç)
  const exerciseAudioInput = document.getElementById('exerciseAudioInput'); // –î–û–î–ê–ù–û
  // ... (—Ä–µ—à—Ç–∞ —Ç–≤–æ—ó—Ö const)

  // ... (–≤–µ—Å—å —Ç–≤—ñ–π –∫–æ–¥ –¥–æ "–õ–æ–≥—ñ–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —Ç—Ä–µ–Ω—É–≤–∞–Ω—å" –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω)

  // --- –õ–æ–≥—ñ–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —Ç—Ä–µ–Ω—É–≤–∞–Ω—å (–ü–û–í–ù–Ü–°–¢–Æ –û–ù–û–í–õ–ï–ù–û) ---
  let workoutPrograms = {}; 
  let currentlyEditingProgram = null;
  let currentlyEditingExerciseIndex = null; // –î–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è, —è–∫—É –≤–ø—Ä–∞–≤—É —Ä–µ–¥–∞–≥—É—î–º–æ

  function loadPrograms() { /* ... –±–µ–∑ –∑–º—ñ–Ω ... */ }
  function savePrograms() { /* ... –±–µ–∑ –∑–º—ñ–Ω ... */ }
  function renderProgramList() { /* ... –±–µ–∑ –∑–º—ñ–Ω ... */ }

  // –û–ù–û–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä —Ü—è —Ñ—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏" —ñ "–í–∏–¥–∞–ª–∏—Ç–∏"
  function renderExerciseList(programName) {
    if (!exerciseListEl) return;
    const program = workoutPrograms[programName];
    exerciseListEl.innerHTML = '';

    if (program && program.exercises.length > 0) {
        program.exercises.forEach((exercise, index) => {
            const li = document.createElement('li');
            li.className = 'exercise-list-item'; // –ù–æ–≤–∏–π –∫–ª–∞—Å –¥–ª—è —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—ó
            
            const infoSpan = document.createElement('span');
            infoSpan.textContent = `${exercise.name} (${exercise.duration}—Å)`;
            
            const actionsDiv = document.createElement('div');
            actionsDiv.className = 'exercise-item-actions';

            const editBtn = document.createElement('button');
            editBtn.textContent = '‚úèÔ∏è';
            editBtn.addEventListener('click', () => {
              openExerciseEditor('edit', programName, index);
            });

            const deleteBtn = document.createElement('button');
            deleteBtn.textContent = 'üóëÔ∏è';
            deleteBtn.addEventListener('click', () => {
              if (confirm(`–í–∏–¥–∞–ª–∏—Ç–∏ –≤–ø—Ä–∞–≤—É "${exercise.name}"?`)) {
                program.exercises.splice(index, 1);
                savePrograms();
                renderExerciseList(programName);
              }
            });

            actionsDiv.appendChild(editBtn);
            actionsDiv.appendChild(deleteBtn);
            li.appendChild(infoSpan);
            li.appendChild(actionsDiv);
            exerciseListEl.appendChild(li);
        });
    } else { 
        exerciseListEl.innerHTML = '<li>(–í–ø—Ä–∞–≤ —â–µ –Ω–µ–º–∞—î)</li>'; 
    }
  }

  function openProgramEditor(programName) {
    currentlyEditingProgram = programName;
    // ... (—Ä–µ—à—Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –±–µ–∑ –∑–º—ñ–Ω)
    renderExerciseList(programName);
  }

  // –ù–û–í–ê –§–£–ù–ö–¶–Ü–Ø: –í—ñ–¥–∫—Ä–∏–≤–∞—î –º–æ–¥–∞–ª–∫—É –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è/—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤–ø—Ä–∞–≤–∏
  function openExerciseEditor(mode, programName, exerciseIndex = null) {
    currentlyEditingProgram = programName;
    currentlyEditingExerciseIndex = exerciseIndex;

    if (mode === 'edit') {
      const exercise = workoutPrograms[programName].exercises[exerciseIndex];
      exerciseModalTitle.textContent = "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≤–ø—Ä–∞–≤—É";
      exerciseNameInput.value = exercise.name;
      exerciseDurationInput.value = exercise.duration;
      exerciseAudioInput.value = exercise.audio || ''; // –ü–æ–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤—É –∞—É–¥—ñ–æ—Ñ–∞–π–ª—É, —è–∫—â–æ —î
    } else { // mode === 'add'
      exerciseModalTitle.textContent = "–ù–æ–≤–∞ –≤–ø—Ä–∞–≤–∞";
      exerciseNameInput.value = '';
      exerciseDurationInput.value = 30;
      exerciseAudioInput.value = '';
      currentlyEditingExerciseIndex = null;
    }
    exerciseModal.classList.add('active');
  }

  if (addExerciseBtn) {
      addExerciseBtn.addEventListener('click', () => {
          openExerciseEditor('add', currentlyEditingProgram);
      });
  }

  // –û–ù–û–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä —Ü—è –∫–Ω–æ–ø–∫–∞ –≤–º—ñ—î —ñ –¥–æ–¥–∞–≤–∞—Ç–∏, —ñ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –≤–ø—Ä–∞–≤—É
  if (saveExerciseBtn) {
      saveExerciseBtn.addEventListener('click', () => {
          const name = exerciseNameInput.value.trim();
          const duration = parseInt(exerciseDurationInput.value, 10);
          const audio = exerciseAudioInput.value.trim();

          if (name && duration > 0 && currentlyEditingProgram) {
              const newExercise = { name, duration, audio };

              if (currentlyEditingExerciseIndex !== null) {
                // –†–µ–∂–∏–º —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
                workoutPrograms[currentlyEditingProgram].exercises[currentlyEditingExerciseIndex] = newExercise;
              } else {
                // –†–µ–∂–∏–º –¥–æ–¥–∞–≤–∞–Ω–Ω—è
                workoutPrograms[currentlyEditingProgram].exercises.push(newExercise);
              }
              
              savePrograms();
              renderExerciseList(currentlyEditingProgram);
              exerciseModal.classList.remove('active');
          } else { 
              alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä–µ–∫—Ç–Ω—É –Ω–∞–∑–≤—É —Ç–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å.'); 
          }
      });
  }

  if (closeExerciseModalBtn) { /* ... –±–µ–∑ –∑–º—ñ–Ω ... */ }
  // ... (—Ä–µ—à—Ç–∞ –∫–æ–¥—É, —â–æ —Å—Ç–æ—Å—É—î—Ç—å—Å—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ø—Ä–æ–≥—Ä–∞–º, –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω)
  
  
  // --- –õ–æ–≥—ñ–∫–∞ –º–æ–¥–∞–ª–∫–∏ –ø—ñ—Å–ª—è —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è (–ü–û–í–ù–Ü–°–¢–Æ –û–ù–û–í–õ–ï–ù–û) ---
  // ... (–≤–µ—Å—å —Ü–µ–π –±–ª–æ–∫ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è —Ç–∞–∫–∏–º, —è–∫ –º–∏ –∑—Ä–æ–±–∏–ª–∏ –º–∏–Ω—É–ª–æ–≥–æ —Ä–∞–∑—É)


  // ... (—Ä–µ—à—Ç–∞ —Ç–≤–æ–≥–æ JS –∫–æ–¥—É –±–µ–∑ –∑–º—ñ–Ω)
});

