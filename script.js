// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫—Ä–∏–ø—Ç, –∫–æ–ª–∏ –≤—Å—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞
document.addEventListener('DOMContentLoaded', () => {
  
  // ===== –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –º—ñ–∂ –µ–∫—Ä–∞–Ω–∞–º–∏ =====
  const screens = document.querySelectorAll('.screen');
  function showScreen(screenId) {
    screens.forEach(s => s.classList.remove('active'));
    const screenToShow = document.getElementById(screenId);
    if (screenToShow) {
      screenToShow.classList.add('active');
    }
  }
  
  // Make showScreen globally available
  window.showScreen = showScreen;

  // ===== DOM –µ–ª–µ–º–µ–Ω—Ç–∏ =====

  // --- –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ --- 
  const workoutModal = document.getElementById('workoutModal');
  const modalProgramNameEl = document.getElementById('modalProgramName');
  const modalExerciseListEl = document.getElementById('modalExerciseList');
  const modalStartBtn = document.getElementById('modalStartBtn');
  const modalSettingsBtn = document.getElementById('modalSettingsBtn');
  const closeModalBtn = workoutModal.querySelector('.close-button');

// --- –ï–∫—Ä–∞–Ω –≤—ñ–¥–ª—ñ–∫—É ---
const countdownScreen = document.getElementById('countdownScreen');
const countdownNumberEl = document.getElementById('countdownNumber');


  // --- –ì–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω ---
  const workoutTiles = document.querySelectorAll('.neumorphic-tile[data-program]');
  const burgerBtn = document.getElementById('burgerBtn');
  const sideMenu = document.getElementById('sideMenu');
  const restDayBtn = document.getElementById('restDayBtn');

  // --- –ï–∫—Ä–∞–Ω —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è ---
  const trainingScreen = document.getElementById('trainingScreen');
  const trainingProgramNameEl = document.getElementById('trainingProgramName');
  const exerciseNameEl = document.getElementById('exerciseName');
  const timerEl = document.getElementById('timer');
  const prevBtn = document.getElementById('prevExercise');
  const pauseBtn = document.getElementById('pauseBtn');
  const stopBtn = document.getElementById('stopBtn');
  const nextBtn = document.getElementById('nextExercise');
  const completedListEl = document.getElementById('completedExercises');

  // --- Glassmorphism –º–æ–¥–∞–ª–∫–∏ (–ó–ê–ö–û–ú–ï–ù–¢–û–í–ê–ù–û, –±–æ —â–µ –Ω–µ–º–∞—î HTML) ---
  // const danceModal = document.getElementById('danceModal');
  // const weightModal = document.getElementById('weightModal');
  // const restDayModal = document.getElementById('restDayModal');
  // const closeModalBtns = document.querySelectorAll('.close-modal');

  // --- –ü—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä ---
  const progressBar = document.querySelector('.progress-line-fg');

  // --- Menu screens (–ó–ê–ö–û–ú–ï–ù–¢–û–í–ê–ù–û, –±–æ —â–µ –Ω–µ–º–∞—î HTML) ---
  // const menuBackBtn = document.getElementById('menuBackBtn');
  // const menuTitle = document.getElementById('menuTitle');
  // const mainMenu = document.getElementById('mainMenu');
  // const workoutSettingsMenu = document.getElementById('workoutSettingsMenu');
  // const programEditMenu = document.getElementById('programEditMenu');
  // const statsSettingsMenu = document.getElementById('statsSettingsMenu');
  // const goalSettingsMenu = document.getElementById('goalSettingsMenu');
  // const appSettingsMenu = document.getElementById('appSettingsMenu');

  // ===== –ü—É–ª–∏ –≤–ø—Ä–∞–≤ =====
  const poolHIIT = [
    '–ë–µ—Ä–ø—ñ', '–î–∂–∞–º–ø-—Å–∫–≤–æ—Ç', '–°–ø—Ä–∏–Ω—Ç –Ω–∞ –º—ñ—Å—Ü—ñ', '–ê–ª—å–ø—ñ–Ω—ñ—Å—Ç', '–ü–ª–∞–Ω–∫–∞', '–°—Ç—Ä–∏–±–∫–∏ –¥–∂–µ–∫', 
    '–í–∏–ø–∞–¥–∏ —Å—Ç—Ä–∏–±–∫–æ–º', '–ü–ª–∞–Ω–∫–∞ + –∫–æ–ª—ñ–Ω–æ-–ª—ñ–∫–æ—Ç—å', '–°–∫–µ–ª–µ–ª–∞–∑ –∑ –ø–∞—É–∑–æ—é', '–•–∞–π-–Ω—ñ—Å (–≤–∏—Å–æ–∫—ñ –∫–æ–ª—ñ–Ω–∞)'
  ];
  const poolMIX = [
    '–ü—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è –∑ –≥–∞–Ω—Ç–µ–ª—è–º–∏','–¢—è–≥–∞ –≥–∞–Ω—Ç–µ–ª–µ–π —É –Ω–∞—Ö–∏–ª—ñ','–ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π –ª–µ–∂–∞—á–∏', '–ú–∞—Ö–∏ –≥–∞–Ω—Ç–µ–ª—è–º–∏ –≤ —Å—Ç–æ—Ä–æ–Ω–∏',
    '–Ø–≥–æ–¥–∏—á–Ω–∏–π –º—ñ—Å—Ç','–°—Ç–∞–Ω–æ–≤–∞ –∑ –≥–∞–Ω—Ç–µ–ª—è–º–∏', '–ü—É–ª–æ–≤–µ—Ä –∑ –≥–∞–Ω—Ç–µ–ª–ª—é','–ú–æ–ª–æ—Ç–∫–æ–≤—ñ –∑–≥–∏–Ω–∞–Ω–Ω—è'
  ];
  const poolCommon = [
    '–í—ñ–¥–∂–∏–º–∞–Ω–Ω—è','–ü–ª–∞–Ω–∫–∞','–°—Ç—Ä–∏–±–∫–∏ –Ω–∞ –º—ñ—Å—Ü—ñ','–í–∏–ø–∞–¥–∏','–°–∫—Ä—É—á—É–≤–∞–Ω–Ω—è','–ü—ñ–¥–π–æ–º–∏ –Ω—ñ–≥','–ë—ñ–≥ –Ω–∞ –º—ñ—Å—Ü—ñ',
    '–°—Ç—ñ–ª—å—á–∏–∫ –±—ñ–ª—è —Å—Ç—ñ–Ω–∏','–°—É–ø–µ—Ä–º–µ–Ω','–†–æ—Å—ñ–π—Å—å–∫—ñ —Å–∫—Ä—É—á—É–≤–∞–Ω–Ω—è','–ë—ñ—á–Ω–∞ –ø–ª–∞–Ω–∫–∞'
  ];
  
  // ===== –õ–æ–≥—ñ–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç—Ä–µ–Ω—É–≤–∞–Ω—å =====
  function shuffle(arr) {
    return [...arr].sort(() => Math.random() - 0.5);
  }

  function buildWorkout(program) {
    let basePool = [];
    if (program.startsWith('HIIT')) {
        basePool = poolHIIT;
    } else if (program.startsWith('MIXED')) {
        basePool = poolMIX;
    } else if (program === 'DUMBBELL') { // –ó–º—ñ–Ω–∏–≤ –Ω–∞–∑–≤—É –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –¥–æ data-program –≤ HTML
        basePool = poolMIX;
    } else if (program === 'BODYWEIGHT') { // –ó–º—ñ–Ω–∏–≤ –Ω–∞–∑–≤—É –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –¥–æ data-program –≤ HTML
        basePool = poolCommon;
    } else {
        basePool = poolCommon;
    }
    const workoutNames = shuffle([...new Set([...basePool, ...poolCommon])]).slice(0, 10);
    const workout = workoutNames.map(name => ({ name: name, duration: 30 }));
    workout.push({ name: '–ö—ñ–Ω–µ—Ü—å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è', duration: 3 });
    return workout;
  }

  // ===== –°—Ç–∞–Ω —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è =====
  let currentProgram = '';
  let exercises = [];
  let currentIndex = 0;
  let remainingTime = 0;
  let timerInterval = null;
  let isPaused = true;
  let isStarted = false;
  const DEFAULT_DURATION = 30;

  // ===== –§—É–Ω–∫—Ü—ñ—ó —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è =====
  function formatTime(seconds) {
    const m = String(Math.floor(seconds / 60)).padStart(2, '0');
    const s = String(seconds % 60).padStart(2, '0');
    return `${m}:${s}`;
  }

  function updateUI() {
    const currentExercise = exercises[currentIndex];
    if (currentExercise) {
        trainingProgramNameEl.textContent = currentProgram;
        exerciseNameEl.textContent = currentExercise.name;
    }
    timerEl.textContent = formatTime(remainingTime);
    pauseBtn.textContent = isPaused ? '‚ñ∂Ô∏è' : '‚è∏Ô∏è';
  }

  function tick() {
    if (isPaused) return;
    remainingTime--;
    timerEl.textContent = formatTime(remainingTime);
    if (remainingTime <= 0) {
      if (currentIndex < exercises.length - 1) {
        currentIndex++;
        remainingTime = exercises[currentIndex].duration || DEFAULT_DURATION;
        updateUI();
      } else {
        finishWorkout();
      }
    }
  }

  function startTimer() {
    clearInterval(timerInterval);
    timerInterval = setInterval(tick, 1000);
  }

  // –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –¢–Ü–õ–¨–ö–ò –∑–∞–ø—É—Å–∫–∞—î –≤—ñ–¥–ª—ñ–∫
function startWorkout(programName) {
  let count = 3; // –ü–æ—á–∏–Ω–∞—î–º–æ –∑ 3

  // –ü–æ–∫–∞–∑—É—î–º–æ –µ–∫—Ä–∞–Ω –≤—ñ–¥–ª—ñ–∫—É
  countdownNumberEl.textContent = count;
  countdownScreen.classList.add('active');

  const countdownInterval = setInterval(() => {
    count--;
    if (count > 0) {
      // –û–Ω–æ–≤–ª—é—î–º–æ —Ü–∏—Ñ—Ä—É
      countdownNumberEl.textContent = count;
    } else {
      // –ö–æ–ª–∏ –¥—ñ–π—à–ª–æ –¥–æ 0, –∑—É–ø–∏–Ω—è—î–º–æ –≤—ñ–¥–ª—ñ–∫
      clearInterval(countdownInterval);
      // –•–æ–≤–∞—î–º–æ –µ–∫—Ä–∞–Ω –≤—ñ–¥–ª—ñ–∫—É
      countdownScreen.classList.remove('active');
      // –Ü –¢–Ü–õ–¨–ö–ò –¢–ï–ü–ï–† —Ä–µ–∞–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞—î–º–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
      _actuallyStartWorkout(programName);
    }
  }, 1000); // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –≤ 1 —Å–µ–∫—É–Ω–¥—É
}

// –°—Ç–∞—Ä–∞ –ª–æ–≥—ñ–∫–∞ —Å—Ç–∞—Ä—Ç—É, –≤–∏–Ω–µ—Å–µ–Ω–∞ –≤ –æ–∫—Ä–µ–º—É —Ñ—É–Ω–∫—Ü—ñ—é –∑ –ø—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–Ω—è–º
function _actuallyStartWorkout(programName) {
  currentProgram = programName;
  exercises = buildWorkout(programName);
  currentIndex = 0;
  remainingTime = exercises[0]?.duration || DEFAULT_DURATION;
  isStarted = true;
  isPaused = false;
  updateUI();
  startTimer();
  showScreen('trainingScreen');
}

// –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏—Ö–æ–¥—É
function confirmExitTraining() {
  // –Ø–∫—â–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è —â–µ –Ω–µ –ø–æ—á–∞–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –≤–∏—Ö–æ–¥–∏–º–æ
  if (!isStarted) {
    showScreen('homeScreen');
    return;
  }

  // –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–µ –≤—ñ–∫–Ω–æ –±—Ä–∞—É–∑–µ—Ä–∞ –∑ –ø–∏—Ç–∞–Ω–Ω—è–º
  const userIsSure = confirm("–¢–æ—á–Ω–æ —Ö–æ—á–µ—à –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è?");

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω—É–≤ "–û–ö" (true), —Ç–æ –∑–∞–≤–µ—Ä—à—É—î–º–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
  if (userIsSure) {
    finishWorkout();
  }
  // –Ø–∫—â–æ –Ω–∞—Ç–∏—Å–Ω—É–≤ "Cancel", –Ω—ñ—á–æ–≥–æ –Ω–µ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è
}


  function finishWorkout() {
    clearInterval(timerInterval);
    isStarted = false;
    isPaused = true;
    alert('–¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ! üí™');
    showScreen('homeScreen');
  }

  // ===== –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∫–µ—Ä—É–≤–∞–Ω–Ω—è =====
  pauseBtn.addEventListener('click', () => {
    if (!isStarted) return;
    isPaused = !isPaused;
    updateUI();
  });

  stopBtn.addEventListener('click', () => {
    if (!isStarted) {
        showScreen('homeScreen');
        return;
    }
    finishWorkout();
  });

// –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏—Ö–æ–¥—É
function confirmExitTraining() {
  // –Ø–∫—â–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è —â–µ –Ω–µ –ø–æ—á–∞–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –≤–∏—Ö–æ–¥–∏–º–æ
  if (!isStarted) {
    showScreen('homeScreen');
    return;
  }

  // –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–µ –≤—ñ–∫–Ω–æ –±—Ä–∞—É–∑–µ—Ä–∞ –∑ –ø–∏—Ç–∞–Ω–Ω—è–º
  const userIsSure = confirm("–¢–æ—á–Ω–æ —Ö–æ—á–µ—à –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è?");

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω—É–≤ "–û–ö" (true), —Ç–æ –∑–∞–≤–µ—Ä—à—É—î–º–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
  if (userIsSure) {
    finishWorkout();
  }
  // –Ø–∫—â–æ –Ω–∞—Ç–∏—Å–Ω—É–≤ "Cancel", –Ω—ñ—á–æ–≥–æ –Ω–µ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è
}


  nextBtn.addEventListener('click', () => {
    if (!isStarted || currentIndex >= exercises.length - 1) return;
    currentIndex++;
    remainingTime = exercises[currentIndex].duration || DEFAULT_DURATION;
    updateUI();
  });

  prevBtn.addEventListener('click', () => {
    if (!isStarted || currentIndex <= 0) return;
    currentIndex--;
    remainingTime = exercises[currentIndex].duration || DEFAULT_DURATION;
    updateUI();
  });

  // ===== –õ–æ–≥—ñ–∫–∞ –ú–æ–¥–∞–ª—å–Ω–æ–≥–æ –í—ñ–∫–Ω–∞ =====
function openWorkoutModal(programName) {
  const previewExercises = buildWorkout(programName);
  modalProgramNameEl.textContent = programName;
  modalExerciseListEl.innerHTML = '';
  previewExercises.forEach(ex => {
    if (ex.name !== '–ö—ñ–Ω–µ—Ü—å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è') {
      const li = document.createElement('li');
      li.textContent = ex.name;
      modalExerciseListEl.appendChild(li);
    }
  });
  workoutModal.classList.add('active');
  
  const startFunction = () => {
    workoutModal.classList.remove('active');
    startWorkout(programName); // <-- –¢—É—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –≤—ñ–¥–ª—ñ–∫
    modalStartBtn.removeEventListener('click', startFunction);
  };
  modalStartBtn.addEventListener('click', startFunction);
}

workoutTiles.forEach(tile => {
  tile.addEventListener('click', () => {
    const programName = tile.dataset.program;
    if (programName) {
      openWorkoutModal(programName); // <-- –¢—É—Ç –≤—ñ–¥–∫—Ä–∏–≤–∞—î—Ç—å—Å—è –º–æ–¥–∞–ª–∫–∞
    }
  });
});

closeModalBtn.addEventListener('click', () => {
  workoutModal.classList.remove('active');
});

workoutModal.addEventListener('click', (event) => {
  if (event.target === workoutModal) {
    workoutModal.classList.remove('active');
  }
});



  workoutModal.addEventListener('click', (event) => {
    if (event.target === workoutModal) {
      workoutModal.classList.remove('active');
    }
  });

  // ===== –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –≤ –º–æ–¥–∞–ª—Ü—ñ =====
  modalSettingsBtn.addEventListener('click', () => {
    alert('–¢—É—Ç –±—É–¥–µ –≤—ñ–∫–Ω–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —ñ –∫–∞—Å—Ç–æ–º—ñ–∑–∞—Ü—ñ—ó –ø–ª–∏—Ç–∫–∏!');
  });
  
  // –ü–æ–∫–∞–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
  showScreen('homeScreen');
});
